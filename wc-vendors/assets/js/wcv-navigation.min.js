!(function(e, c) {
  e(document).ready(function(l) {
    l(document).on('click', '.wcv-shade.wcv-fade.visible', function(e) {
      if (!e.target.closest('.wcv-modal')) {
        e = l(this).find('.wcv-modal')[0];
        if (e)
          try {
            var t = c.UI.Modal_1.getInstance(e);
            t && t.dismiss();
          } catch (e) {
            console.error('Error dismissing modal:', e);
          }
      }
    });
    let t = l('.wcv-dashboard-menu.secondary'),
      s = l('#dashboard-menu-item-more-button'),
      a = l('.wcv-dashboard-menu.primary'),
      d = l('#wcv-navigation');
    function e() {
      let o = d.width(),
        i = s.outerWidth(!0),
        n = 0,
        c = -1,
        e = [];
      a.find('li').each(function() {
        e.push(l(this));
      }),
        t.find('li').each(function() {
          e.push(l(this));
        }),
        t.empty(),
        a.empty(),
        e.forEach(e => {
          e.css('opacity', 0.5)
            .appendTo(a)
            .animate({ opacity: 1 }, 100);
        }),
        s.hide(),
        a.find('li').each(function(e, t) {
          var s = l(this).outerWidth(!0);
          0 < e && (n += 24), (n += s) + i > o && -1 === c && (c = e);
        }),
        -1 !== c &&
          (s.show().css('display', 'flex'),
          a.find('li').each(function(e) {
            e >= c && l(this).appendTo(t);
          }));
    }
    e(), l(window).on('resize', e);
    function o() {
      var e,
        t = l(window).width(),
        s = l('.wcv-store-setup-steps'),
        o = l('.wcv-store-setup-progress-bar'),
        i = l('.wcv-store-setup-progress-bar-fill'),
        n = l('.wcv-store-setup-step.completed:last'),
        c = l('.wcv-store-setup-step:first'),
        a = l('.wcv-store-setup-step:last');
      if (
        (c.length && a.length && 768 < t
          ? ((e = a.position().left - c.position().left + a.width()),
            o.css({
              width: e + 'px',
              height: '8px',
              top: c.position().top + 72 + 'px',
              left: '50%'
            }))
          : c.length &&
            a.length &&
            t <= 768 &&
            (n.next(),
            (e = l('.wcv-store-setup-step-icon:first')),
            (e =
              l('.wcv-store-setup-step-icon:last').offset().top -
              e.offset().top),
            o.css({
              width: '3px',
              height: e + 'px',
              top: c.position().top + 40 + 'px',
              left: c.position().left + 20 - 2 + 'px'
            })),
        n.length && 768 < t)
      ) {
        var o = n.next();
        let e = a.position().left - s.position().left + a.width();
        o.length &&
          o.position().left != a.position().left &&
          (e = o.position().left - s.position().left + a.width() / 2),
          i.css('width', e + 'px');
      } else n.length && t <= 768 && ((e = l('.wcv-store-setup-step-icon:first')), (c = l('.wcv-store-setup-step-icon:last')), (o = n.next()).length && o.position().top != a.position().top ? ((s = o.find('.wcv-store-setup-step-icon').offset().top - e.offset().top), i.css({ width: '3px', height: s + 'px' })) : ((t = c.offset().top - e.offset().top), i.css({ width: '3px', height: t + 'px' })));
    }
    (n =
      0 < l('#dashboard-menu-item-view-store').length
        ? l('#dashboard-menu-item-view-store')
        : l('#dashboard-menu-item-settings')),
      l('<li class="wcv-dashboard-menu-divider"></li>').insertBefore(n),
      l('a.mark-order-unshipped').on('click', function(e) {
        confirm(wcvendor_dashboard.mark_unshipped_confirm) ||
          e.preventDefault();
      }),
      l('.wcv-store-setup-dismiss').on('click', function(e) {
        e.preventDefault(),
          l.ajax({
            url: wcvendor_dashboard.ajax_url,
            type: 'POST',
            data: {
              action: 'wcv_dismiss_store_setup_step_section',
              nonce: wcvendor_dashboard.dashboard_nonce
            },
            success: function(e) {
              e.success && l('.wcv-store-setup-steps-wrapper').remove();
            },
            error: function(e) {
              console.error(e);
            }
          });
      }),
      o(),
      l(window).on('resize', function() {
        o();
      }),
      l(document).on('click', function(e) {
        l(e.target).closest('#dashboard-menu-item-more-button').length
          ? s.length &&
            t.length &&
            (t.toggleClass('show'), s.toggleClass('show'))
          : (s.removeClass('show'), t.removeClass('show'));
      }),
      l('.wcv-custom-select').each(function() {
        buildCustomSelect(this);
      }),
      l('.wcv-open-popup-add-note').on('click', function(e) {
        e = e.target.getAttribute('data-modal');
        document.getElementById(e).dispatchEvent(new Event('click'));
      });
    let i = l('#_wcv_store_country').val();
    l('#_wcv_store_country').on('change', function() {
      (i = l(this).val()),
        l('#wcv-country-code-select')
          .val(i)
          .trigger('change');
    });
    var n = wcvendor_dashboard.countries_phone_codes.map(e => ({
      id: e.code,
      text: e.flag + ` ${e.name} ` + e.dial_code,
      flag: e.flag,
      name: e.name,
      dial_code: e.dial_code,
      selected: e.code === i
    }));
    l('#wcv-country-code-select').select2({
      templateSelection: function(e) {
        return e.id ? e.flag + '  ' + e.dial_code : e.text;
      },
      data: n,
      dropdownAutoWidth: !0,
      value: i
    }),
      l(document).on('mouseenter', '.wcv-tip', showTooltip),
      l(document).on('mouseleave', '.wcv-tip', function(e) {
        var t,
          e = e.currentTarget;
        e &&
          ((t = e.querySelector('.content')),
          (e = e.querySelector('.arrow')),
          t) &&
          e &&
          ((t.style.display = 'none'), (e.style.display = 'none'));
      }),
      addAccordion(),
      productEditAccordion();
  });
})(jQuery, Ink);
let getPlaceHolderText = e => {
    var t = e.querySelectorAll('option'),
      s = [];
    for (let e = 0; e < t.length; e++)
      t[e].selected && '' !== t[e].value && s.push(t[e]);
    return 0 === s.length
      ? e.getAttribute('placeholder') || wcvendor_dashboard.option_none_text
      : 1 === s.length
      ? s[0].innerText
      : s.length + ' selected';
  },
  buildCustomSelect = o => {
    o.offsetWidth;
    var e = o.getAttribute('id');
    let t = o.getAttribute('data-text-align'),
      s =
        ((t = t || 'center'),
        (o.style.display = 'none'),
        document.createElement('div')),
      i = (s.setAttribute('data-id', e), document.createElement('ul')),
      n = o.multiple,
      c = o.getAttribute('data-autosubmit'),
      a = document.createElement('span'),
      l =
        ((a.innerHTML = getPlaceHolderText(o)),
        (a.className = 'wcv-select-placeholder'),
        (s.className = 'wcv-select-container'),
        (i.className = 'wcv-select-list'),
        s.appendChild(a),
        s.appendChild(i),
        o.options);
    for (let e = 0; e < l.length; e++) {
      var d = l[e];
      let s = document.createElement('li');
      s.className = 'wcv-select-item';
      var r = document.createElement('span');
      (r.innerHTML = d.innerText),
        s.appendChild(r),
        (s.style.textAlign = t),
        s.setAttribute('data-value', d.value),
        s.setAttribute('data-index', e),
        d.selected && '' !== d.value && s.classList.add('selected'),
        s.addEventListener('click', function() {
          var t = this.getAttribute('data-index'),
            e = l[t];
          if (n) (e.selected = !e.selected), s.classList.toggle('selected');
          else {
            for (let e = 0; e < l.length; e++)
              e != t &&
                ((l[e].selected = !1),
                i.children[e].classList.remove('selected'));
            (e.selected = !0), s.classList.add('selected');
          }
          if ('' === e.value)
            for (let e = 0; e < l.length; e++)
              e != t &&
                ((l[e].selected = !1),
                i.children[e].classList.remove('selected'));
          (a.innerHTML = getPlaceHolderText(o)),
            o.dispatchEvent(new Event('change')),
            c && o.closest('form').submit();
        }),
        i.appendChild(s);
    }
    o.parentNode.insertBefore(s, o),
      s.addEventListener('click', function() {
        s.classList.toggle('show'), i.classList.toggle('show');
      }),
      s.addEventListener('dblclick', function(e) {
        e.preventDefault();
      }),
      document.addEventListener('click', function(e) {
        e = e.target;
        s.contains(e) ||
          (s.classList.remove('show'), i.classList.remove('show'));
      });
  };
function showTooltip(s) {
  s = s.currentTarget;
  if (s) {
    var o = s.querySelector('.content'),
      i = s.querySelector('.arrow');
    if (o && i) {
      (o.style.display = 'block'), (i.style.display = 'block');
      var s = s.getBoundingClientRect(),
        n = o.getBoundingClientRect();
      let e = -n.height - 10,
        t = s.width / 2 - n.width / 2 + 4;
      s.left + n.width > window.innerWidth && (t = s.width - n.width);
      var c = s.top - n.height < 0;
      c && (e = s.height + 10),
        (o.style.top = e + 'px'),
        (o.style.left = t + 'px'),
        i &&
          ((o = i.getBoundingClientRect()),
          (n = c ? -o.height : n.height),
          (s = s.width / 2 - o.width / 2 - t + 4),
          (i.style.top = n + 'px'),
          (i.style.left = s + 'px'),
          (i.style.transform = c ? 'rotate(180deg)' : ''));
    }
  }
}
let addAccordion = () => {
    var e = document.querySelector('#wcv-store-settings .wcv-tabs');
    let c = document.querySelectorAll('#wcv-store-settings .tabs-content');
    if (
      e &&
      (e.querySelectorAll('a.tabs-tab').forEach(e => {
        let t = e.getAttribute('href').replace('#', '');
        var s = e.innerText,
          o = document.querySelector('#' + t),
          i = document.createElement('div'),
          e =
            e.classList.contains('has-dot') &&
            null !== e.querySelector('.wcv-dot');
        (i.className = 'wcv-accordion-content'), wrapElemt(o, i);
        let n = document.createElement('div');
        (n.className = 'wcv_mobile wcv-accordion-title'),
          o.classList.contains('active') &&
            (n.classList.add('active'), o.parentNode.classList.add('active'));
        o = document.createElement('span');
        (o.className = 'wcv-accordion-title-text'),
          (o.innerHTML = s),
          e &&
            (n.classList.add('has-dot'),
            (o.innerHTML += '<span class="wcv-dot"></span>')),
          n.appendChild(o),
          n.addEventListener('click', function() {
            n.classList.toggle('active'),
              c.forEach(e => {
                e.id === t
                  ? (n.classList.contains('active')
                      ? (e.classList.add('active'),
                        e.classList.remove('hide-all'))
                      : (e.classList.add('hide-all'),
                        e.classList.remove('active')),
                    e.parentNode.classList.toggle('active'))
                  : (e.classList.add('hide-all'),
                    e.classList.remove('active'),
                    e.parentNode.classList.remove('active'),
                    e.parentNode
                      .querySelector('.wcv-accordion-title')
                      .classList.remove('active'));
              });
          }),
          i.prepend(n);
      }),
      'undefined' != typeof tinymce && 0 < tinymce.editors.length)
    ) {
      var t = document.querySelectorAll('.wp-editor-area'),
        s = tinyMCEPreInit.mceInit;
      for (let e = 0; e < t.length; e++) {
        var o = t[e].id;
        reinitWPEditor(o, s[o]);
      }
    }
  },
  productEditAccordion = () => {
    var e = document.querySelectorAll('#wcv-product-edit .tabs-content');
    let c = wcvendor_dashboard.product_meta_tabs;
    e.forEach(t => {
      var s = t.id;
      if (c[s]) {
        var o = c[s],
          i = o.label,
          n = document.createElement('div');
        (n.className = 'wcv-product-accordion is_hidden ' + o.class.join(' ')),
          wrapElemt(t, n);
        let e = document.createElement('div');
        (e.className = 'wcv-accordion-title'), e.setAttribute('data-tab', s);
        (o = document.createElement('h3')),
          (s = document.createElementNS('http://www.w3.org/2000/svg', 'svg'));
        s.classList.add('wcv-icon', 'wcv-icon-24'),
          (s.innerHTML = `<use xlink:href="${wcvendor_dashboard.icon_url}#wcv-icon-caret-down"></use>`),
          (o.innerHTML = i),
          e.appendChild(o),
          e.appendChild(s),
          e.addEventListener('click', function() {
            e.classList.toggle('active'),
              e.classList.contains('active')
                ? (t.classList.add('active'), t.classList.remove('hide-all'))
                : (t.classList.add('hide-all'), t.classList.remove('active'));
          }),
          n.prepend(e);
      }
    });
  },
  wrapElemt = (e, t) => {
    e.parentNode.insertBefore(t, e), t.appendChild(e);
  };
function reinitWPEditor(e, t) {
  'undefined' != typeof tinymce && (s = tinymce.get(e)) && s.remove();
  var s = document.getElementById(e);
  s
    ? tinymce.init(t)
    : console.error(`Editor element with ID "${e}" not found.`);
}
let buildCustomToggleMenu = t => {
  let s = document.querySelector(t);
  if (s) {
    t = s.getAttribute('data-target');
    let e = document.querySelector(t);
    s.addEventListener('click', function() {
      s.classList.toggle('open'), e.classList.toggle('show');
    });
  }
};
