jQuery(function(m) {
  m(document).ready(function() {
    function t() {
      var e = m('#product-type').val(),
        t = m('#_virtual').is(':checkbox')
          ? m('input#_virtual:checked').length
          : m('#_virtual').val(),
        a = m('#_downloadable').is(':checkbox')
          ? m('input#_downloadable:checked').length
          : m('#_downloadable').val(),
        i = '.hide_if_downloadable, .hide_if_virtual',
        r =
          '.show_if_downloadable, .show_if_virtual, .show_if_external, .show_if_booking',
        a =
          (m.each(wcv_frontend_product.product_types, function(e, t) {
            (i = i + ', .hide_if_' + t), (r = r + ', .show_if_' + t);
          }),
          m(i)
            .show()
            .removeClass('is_hidden'),
          m(i)
            .find('input')
            .removeClass('is_hidden'),
          m(r)
            .hide()
            .addClass('is_hidden'),
          m(r)
            .find('input')
            .addClass('is_hidden'),
          a &&
            (m('.show_if_downloadable')
              .show()
              .removeClass('is_hidden'),
            m('.show_if_downloadable')
              .find('input')
              .removeClass('is_hidden')),
          t &&
            (m('.show_if_virtual')
              .show()
              .removeClass('is_hidden'),
            m('.show_if_virtual')
              .find('input')
              .removeClass('is_hidden'),
            m('ul.tabs-nav li').removeClass('active')),
          m('.show_if_' + e)
            .show()
            .removeClass('is_hidden'),
          m('.show_if_' + e)
            .find('input')
            .removeClass('is_hidden'),
          a &&
            (m('.hide_if_downloadable')
              .hide()
              .addClass('is_hidden'),
            m('.hide_if_downloadable')
              .find('input')
              .addClass('is_hidden')),
          t &&
            (m('.hide_if_virtual')
              .hide()
              .addClass('is_hidden'),
            m('.hide_if_virtual')
              .find('input')
              .addClass('is_hidden')),
          'grouped' == e &&
            (m('.linked_product')
              .parent()
              .addClass('active'),
            m('#linked_product')
              .removeClass('hide-all')
              .addClass('active')),
          m('.hide_if_' + e)
            .hide()
            .addClass('is_hidden'),
          m('.hide_if_' + e)
            .find('input')
            .addClass('is_hidden'),
          m('input#_manage_stock').trigger('change'),
          wcv_frontend_product.is_demensions_required);
      a && t
        ? m('input#_length, input#_width, input#_height').prop('required', !1)
        : a &&
          m('input#_length, input#_width, input#_height').prop('required', !0),
        !jQuery('.wcv-form').length ||
          jQuery('.wcv-search-form').length ||
          m('.wcv-form').hasClass('wcv-form-exclude') ||
          m('.wcv-form')
            .parsley()
            .reset();
    }
    function a() {
      var t,
        e = m('.wcv-featuredimg').data('title'),
        a = m('.wcv-featuredimg').data('button_text'),
        i = wp.media({ title: e, button: { text: a }, multiple: !1 });
      i.on('select', function() {
        var e;
        (t = i
          .state()
          .get('selection')
          .first()
          .toJSON()),
          m.trim(t.url.length) < 0 ||
            ((e = (t.sizes.thumbnail || t).url),
            m('.wcv-featuredimg')
              .find('img')
              .remove(),
            m('.wcv-featuredimg').prepend(
              '<img src="' +
                e +
                '" alt="' +
                t.caption +
                '" title="' +
                t.title +
                '" style="max-width: 100%;" />'
            ),
            m('.wcv-featuredimg').addClass('has-image'),
            m('#_featured_image_id').val(t.id),
            m('.wcv_featured_image_msg').html(''),
            m('.wcv-media-uploader-featured-replace').removeClass('hidden'),
            m('.wcv-media-uploader-featured-delete').removeClass('hidden'),
            m('.product-feat-image-upload .file-upload-wrapper').addClass(
              'hidden'
            ));
      }),
        i.open();
    }
    function i() {
      var e,
        i = m('#product_image_gallery'),
        r = m('#product_images_container ul.product_images'),
        o = i.val(),
        n = m('#product_images_container').data('gallery_max_upload'),
        l = m('#product_images_container').data('gallery_max_selected_notice'),
        d = (wp.media.frames.file_frame = wp.media({
          title: 'Choose or Upload Images',
          button: { text: 'Use Image(s)' },
          library: { type: 'image' },
          multiple: !0
        }));
      d.on('select', function() {
        var t,
          e = d.state().get('selection'),
          a = (m('.max-gallery-images-exceeded-warning').remove(), 0);
        e.map(function(e) {
          (e = e.toJSON()).id &&
            !s() &&
            ((o = o ? o + ',' + e.id : e.id),
            (t = (e.sizes.thumbnail || e).url),
            r
              .find('.file-upload-wrapper')
              .before(
                '<li class="wcv-gallery-image" data-attachment_id="' +
                  e.id +
                  '"><img src="' +
                  t +
                  '" /><ul class="actions"><li><a href="#" class="delete" title="Delete image"><svg class="wcv-icon wcv-icon-md"><use xlink:href="' +
                  wcv_frontend_product.assets_url +
                  'svg/wcv-icons.svg#wcv-icon-times"></use></svg></a></li></ul></li>'
              ),
            m('.wcv_gallery_msg').html('')),
            a++;
        }),
          i.val(o),
          n < a &&
            ((e =
              '<div class="max-gallery-images-exceeded-warning">' +
              l +
              '</div>'),
            m('#product_images_container').append(e));
      }),
        d.on('close', function() {
          m('.attachment.selected').removeClass('selected');
        }),
        s()
          ? ((e = m('#product_images_container').data('gallery_max_notice')),
            alert(e))
          : d.open();
    }
    var r, o, n, l;
    function s() {
      var e = m('.wcv-gallery-image').length;
      return m('#product_images_container').data('gallery_max_upload') - 1 < e;
    }
    function e(e, t) {
      m(e).is(':checked')
        ? (t.prop('disabled', !0),
          t.each(function() {
            m(this).is(':checkbox')
              ? m(this).removeAttr('checked')
              : m(this).val('');
          }))
        : t.prop('disabled', !1);
    }
    m('select#product-type')
      .on('change', function() {
        var e = m(this).val();
        document
          .getElementById('product-meta-accordion')
          .setAttribute('data-type', e),
          'variable' === e
            ? (m('input#_manage_stock').trigger('change'),
              m('input#_downloadable').prop('checked', !1),
              m('input#_virtual').removeAttr('checked'))
            : ('grouped' !== e && 'external' !== e) ||
              (m('input#_downloadable').prop('checked', !1),
              m('input#_virtual').removeAttr('checked')),
          t(),
          m('body').trigger('woocommerce-product-type-change', e, m(this)),
          m('.wcv-tabs')
            .find('select.select2')
            .select2();
      })
      .trigger('change'),
      m('input#_downloadable, input#_virtual').on('change', function() {
        t();
      }),
      m('.sale_price_dates_fields').each(function() {
        var e = !1;
        m('.sale_price_dates_fields')
          .find('input')
          .each(function() {
            '' != m(this).val() && (e = !0);
          }),
          e
            ? (m('.sale_schedule').hide(), m('.sale_price_dates_fields').show())
            : (m('.sale_schedule').show(),
              m('.sale_price_dates_fields').hide());
      }),
      m('.sale_schedule').on('click', function() {
        return (
          m('.sale_price_dates_fields').show(),
          m(this).hide(),
          m('.cancel_sale_schedule').show(),
          !1
        );
      }),
      m('.cancel_sale_schedule').on('click', function() {
        return (
          m('.sale_price_dates_fields').hide(),
          m(this).hide(),
          m('.sale_schedule').show(),
          !1
        );
      }),
      m('input#_manage_stock')
        .on('change', function() {
          var e;
          m(this).is(':checked')
            ? (m('div.stock_fields')
                .show()
                .removeClass('is_hidden'),
              m('div.stock_fields')
                .find('input')
                .removeClass('is_hidden'),
              m('.stock_status_field').hide())
            : ((e = m('select#product-type').val()),
              m('div.stock_fields')
                .hide()
                .addClass('is_hidden'),
              m('div.stock_fields')
                .find('input')
                .addClass('is_hidden'),
              m('.stock_status_field:not( .hide_if_' + e + ' )').show()),
            m('.wcv-form').hasClass('wcv-form-exclude') ||
              m('.wcv-form')
                .parsley()
                .reset();
        })
        .change(),
      m('.wcv-media-uploader-featured-delete').on('click', function(e) {
        e.preventDefault(),
          m('.wcv-featuredimg')
            .find('img')
            .remove(),
          m('.wcv-featuredimg').removeClass('has-image'),
          m('#_featured_image_id').val(''),
          m('.wcv-media-uploader-featured-delete').addClass('hidden'),
          m('.wcv-media-uploader-featured-replace').addClass('hidden'),
          m('.product-feat-image-upload .file-upload-wrapper').removeClass(
            'hidden'
          );
      }),
      m('.wcv-media-uploader-featured-replace').on('click', function() {
        return a(), !1;
      }),
      m(document).on('click', '.attachment', function() {
        var e = m('.attachment.selected').length,
          t = m('#product_images_container').data('gallery_max_upload'),
          a = m('#product_images_container').data(
            'gallery_max_selected_notice'
          );
        t < e &&
          (m('.max-gallery-selected-warning').remove(),
          m(
            '.media-frame-toolbar .media-toolbar .media-toolbar-secondary'
          ).prepend(
            '<div class="woocommerce-info max-gallery-selected-warning">' +
              a +
              '</div>'
          ),
          m('.media-button-select').attr('disabled', !0)),
          e <= t &&
            (m('.max-gallery-selected-warning').remove(),
            m('.media-button-select').attr('disabled', !1));
      }),
      document.getElementById('product_images') &&
        new MutationObserver(function(e) {
          e.forEach(function(e) {
            var t;
            (0 < e.addedNodes.length || 0 < e.removedNodes.length) &&
              ((t = m('#product_images').children().length),
              m('#product_images_container').data('gallery_max_upload') < t
                ? m('.product-imgs-gallery-upload')
                    .find('.file-upload-wrapper')
                    .addClass('hide-all')
                : m('.product-imgs-gallery-upload')
                    .find('.file-upload-wrapper')
                    .removeClass('hide-all'),
              1 < t
                ? (m(
                    '.product-imgs-gallery-upload .wcv-upload-files-input'
                  ).addClass('small'),
                  e.target.classList.add('has-images'))
                : (m(
                    '.product-imgs-gallery-upload .wcv-upload-files-input'
                  ).removeClass('small'),
                  e.target.classList.remove('has-images')));
          });
        }).observe(document.getElementById('product_images'), {
          childList: !0
        }),
      m('#product_images_container').on('click', 'a.delete', function(e) {
        var t = m('#product_image_gallery'),
          a =
            (e.preventDefault(),
            m(this)
              .closest('li.wcv-gallery-image')
              .remove(),
            ''),
          e =
            (m('#product_images_container ul li.wcv-gallery-image')
              .css('cursor', 'default')
              .each(function() {
                var e = jQuery(this).attr('data-attachment_id');
                a = a + e + ',';
              }),
            (a = a.replace(/,\s*$/, '')),
            t.val(a),
            m('#tiptip_holder').removeAttr('style'),
            m('#tiptip_arrow').removeAttr('style'),
            t.val().split(',').length);
        return (
          e < m('#product_images_container').data('gallery_max_upload') &&
            m('.product-imgs-gallery-upload')
              .find('.file-upload-wrapper')
              .removeClass('hidden'),
          !1
        );
      }),
      m('.product-imgs-gallery-upload .wcv-browser-file').on('click', function(
        e
      ) {
        return e.preventDefault(), i(), !1;
      }),
      m('#files_download').on(
        'click',
        '.downloadable_files a.insert',
        function() {
          return (
            m(this)
              .closest('.downloadable_files')
              .find('tbody')
              .append(m(this).data('row')),
            !1
          );
        }
      ),
      m('#files_download').on(
        'click',
        '.downloadable_files a.delete',
        function() {
          return (
            m(this)
              .closest('tr')
              .remove(),
            !1
          );
        }
      ),
      m(document).on('change', '.file_display', function(e) {
        e.preventDefault();
        var e = m(this),
          e = ((o = e.closest('tr').find('.file_url')), e.val()),
          t = wcv_frontend_product.mime_types.join('|'),
          t = new RegExp(`^.*.(${t})$`, 'gm');
        e &&
          'file_url' !== wcv_frontend_product.wcv_file_display &&
          t.test(e) &&
          o.val(e);
      }),
      m(document).on('click', '.upload_file_button', function(e) {
        var t = m(this);
        (o = t.closest('tr').find('.file_url')),
          (n = t.closest('tr').find('.file_id')),
          (l = t.closest('tr').find('.file_display')),
          e.preventDefault(),
          r ||
            ((e = [
              new wp.media.controller.Library({
                library: wp.media.query(),
                multiple: !0,
                title: t.data('choose'),
                priority: 20,
                filterable: 'uploaded'
              })
            ]),
            (r = wp.media.frames.downloadable_file = wp.media({
              title: t.data('choose'),
              library: { type: '' },
              button: { text: t.data('update') },
              multiple: !0,
              states: e
            })).on('select', function() {
              var t = '',
                a = '',
                i = 0;
              r
                .state()
                .get('selection')
                .map(function(e) {
                  (a =
                    'file_url' == wcv_frontend_product.wcv_file_display
                      ? e.attributes.url
                      : e.attributes.filename),
                    (e = e.toJSON()).url && (t = e.url),
                    e.id && (i = e.id);
                }),
                o.val(t),
                l.val(a),
                n.val(i);
            }),
            r.on('ready', function() {
              r.uploader.options.uploader.params = {
                type: 'downloadable_product'
              };
            })),
          r.open();
      }),
      m('.downloadable_files tbody').sortable({
        items: 'tr',
        cursor: 'move',
        axis: 'y',
        handle: 'td.sort',
        scrollSensitivity: 40,
        forcePlaceholderSize: !0,
        helper: 'clone',
        opacity: 0.65
      }),
      m('#_shipping_fee_national_disable').change(function() {
        e(m(this), m('.wcv-disable-national-input'));
      }),
      m('#_shipping_fee_national_free').on('change', function() {
        e(m(this), m('#_shipping_fee_national')),
          e(m(this), m('#_national_minimum_shipping_fee')),
          e(m(this), m('#_national_maximum_shipping_fee')),
          e(m(this), m('#_national_free_shipping_product'));
      }),
      m('#_shipping_fee_international_disable').on('change', function() {
        e(m(this), m('.wcv-disable-international-input'));
      }),
      m('#_shipping_fee_international_free').on('change', function() {
        e(m(this), m('#_shipping_fee_international')),
          e(m(this), m('#_international_minimum_shipping_fee')),
          e(m(this), m('#_international_maximum_shipping_fee')),
          e(m(this), m('#_international_free_shipping_product'));
      }),
      m('#shipping').on('click', '.wcv_shipping_rates a.insert', function() {
        var e = m('#wcv_shipping_rates_table tbody tr').length,
          t = (t = m(this)
            .data('row')
            .replace(
              'id="_wcv_shipping_overrides_"',
              'id="_wcv_shipping_overrides_' + e + '"'
            )).replace(
            'name="_wcv_shipping_overrides_"',
            'name="_wcv_shipping_overrides_' + e + '"'
          );
        return (
          m(this)
            .closest('.wcv_shipping_rates')
            .find('tbody')
            .append(t)
            .find('select')
            .select2({ placeholderOption: 'first', width: '100%' }),
          !1
        );
      }),
      m('#shipping').on('click', '.wcv_shipping_rates a.delete', function() {
        return (
          m(this)
            .closest('tr')
            .remove(),
          !1
        );
      }),
      m('.wcv_shipping_rates tbody').sortable({
        items: 'tr',
        cursor: 'move',
        axis: 'y',
        handle: 'td.sort',
        scrollSensitivity: 40,
        forcePlaceholderSize: !0,
        helper: 'clone',
        opacity: 0.65
      }),
      m('.category-select2').select2({
        maximumSelectionLength: wcv_frontend_product.category_limit,
        language: {
          maximumSelected: function(e) {
            return 1 != e.maximum
              ? wcv_frontend_product.select2_maximumSelected_plural
              : wcv_frontend_product.select2_maximumSelected_single;
          },
          loadingMore: function() {
            return wcv_frontend_product.select2_loadingMore;
          },
          errorLoading: function() {
            return wcv_frontend_product.select2_errorLoading;
          },
          noResults: function() {
            return wcv_frontend_product.select2_noResults;
          },
          searching: function() {
            return wcv_frontend_product.select2_searching;
          },
          removeAllItems: function() {
            return wcv_frontend_product.select2_removeAllItems;
          }
        }
      }),
      t(),
      e(m('#_shipping_fee_national_free'), m('#_shipping_fee_national')),
      e(
        m('#_shipping_fee_international_free'),
        m('#_shipping_fee_international')
      ),
      e(m('#_shipping_fee_national_disable'), m('.wcv-disable-national-input')),
      e(
        m('#_shipping_fee_international_disable'),
        m('.wcv-disable-international-input')
      ),
      m('.confirm_delete').on('click', function(e) {
        confirm(m(this).data('confirm_text')) || e.preventDefault();
      });
    var d = m('.product_attributes')
        .find('.woocommerce_attribute')
        .get(),
      c =
        (d.sort(function(e, t) {
          (e = parseInt(m(e).attr('rel'), 10)),
            (t = parseInt(m(t).attr('rel'), 10));
          return e < t ? -1 : t < e ? 1 : 0;
        }),
        m(d).each(function(e, t) {
          m('.product_attributes').append(t);
        }),
        m('.product_attributes .woocommerce_attribute').each(function(e, t) {
          'none' !== m(t).css('display') &&
            m(t).is('.taxonomy') &&
            m('select.attribute_taxonomy')
              .find('option[value="' + m(t).data('taxonomy') + '"]')
              .attr('disabled', 'disabled');
        }),
        m('.wcv_product_attributes')
          .on('click', '.wcv-metabox .wcv-attr-header', function(e) {
            m(e.target).filter(':input, option, .sort').length ||
              (m(this)
                .next('.wcv-metabox-content')
                .stop()
                .slideToggle(),
              m(this)
                .closest('.wcv-metabox')
                .toggleClass('closed'),
              0 <
                (e = m(this)
                  .siblings('.wcv_attribute_data')
                  .find('select')).length &&
                !e.hasClass('select2-hidden-accessible') &&
                e.select2());
          })
          .on('click', '.expand_all', function() {
            return (
              m(this)
                .closest('.wcv_product_attributes')
                .find('.wcv-metabox')
                .removeClass('closed')
                .find('.wcv-metabox-content')
                .slideDown(),
              !1
            );
          })
          .on('click', '.close_all', function() {
            return (
              m(this)
                .closest('.wcv_product_attributes')
                .find('.wcv-metabox')
                .addClass('closed')
                .find('.wcv-metabox-content')
                .slideUp(),
              !1
            );
          }),
        m('.wcv-metabox.closed').each(function() {
          m(this)
            .find('.wcv-metabox-content')
            .hide();
        }),
        m(function() {
          function l(e) {
            var t = m('#wcv-variation-attributes').data('variation_attr');
            jQuery.isEmptyObject(t) ||
              (delete t[e],
              m('#wcv-variation-attributes').data('variation_attr', t));
          }
          function r(e, t, a) {
            var i,
              r = {},
              o = e.parent().data('taxonomy'),
              n = e.parent().data('index_value');
            m('#attribute_variation_' + n).is(':checked') &&
              (e.is('input')
                ? ((i = e.val().split(wcv_frontend_product.wc_deliminator)),
                  m.each(i, function(e, t) {
                    0 < m.trim(t).length &&
                      (r[m.trim(t).toLowerCase()] = m.trim(t));
                  }))
                : (e.select2(),
                  (i = e.select2('data')),
                  m.each(i, function(e, t) {
                    r[t.id] = t.text;
                  }))),
              jQuery.isEmptyObject(r)
                ? l(o)
                : ((n = r),
                  (e = o),
                  (i = t),
                  (o = a),
                  (t = m('#wcv-variation-attributes').data('variation_attr')),
                  jQuery.isEmptyObject(t) && (t = {}),
                  ((a = {}).values = n),
                  (a.position = i),
                  (a.name = e),
                  (a.label = o),
                  (t[e] = a),
                  m('#wcv-variation-attributes').data('variation_attr', t),
                  m('.wcv_single_add_variation').removeClass('hide-all'));
          }
          function n() {
            m('.product_attributes .woocommerce_attribute').each(function(
              e,
              t
            ) {
              m('.attribute_position', t).val(
                parseInt(
                  m(t).index('.product_attributes .woocommerce_attribute'),
                  10
                )
              );
              var a = m(this).data('index_value'),
                a =
                  ((t = m('#attribute_values_' + a)),
                  m('#attribute_position_' + a).val());
              r(t, a, m(this).data('label'));
            });
          }
          m('select.attribute_taxonomy').on('change', function() {
            let e = m('.product_attributes .woocommerce_attribute').length,
              t = m(this).val(),
              a = m('.wcv_product_attributes');
            var i, r, o;
            if (
              (a.block({
                message: null,
                overlayCSS: { background: '#fff', opacity: 0.6 }
              }),
              t)
            )
              return (
                (i = m('.product_attributes')),
                (r = m('#product-type').val()),
                (o = {
                  action: 'wcv_json_add_attribute',
                  taxonomy: t,
                  i: e,
                  security: wcv_frontend_product.wcv_add_attribute_nonce
                }),
                m.post(wcv_frontend_product.ajax_url, o, function(e) {
                  e.error
                    ? window.alert(e.error)
                    : (i.append(e),
                      i
                        .find('.woocommerce_attribute:last .wcv-attr-header')
                        .click(),
                      m('select.attribute_values')
                        .filter(':not(.select12-hidden-accessible)')
                        .select2(),
                      'variable' !== r && i.find('.enable_variation').hide(),
                      m(document.body).trigger('wc-enhanced-select-init'),
                      n(),
                      m(document.body).trigger('woocommerce_added_attribute')),
                    a.unblock();
                }),
                t &&
                  (m('select.attribute_taxonomy')
                    .find('option[value="' + t + '"]')
                    .attr('disabled', 'disabled'),
                  m('select.attribute_taxonomy').val('')),
                !1
              );
          }),
            m('.product_attributes').on(
              'click',
              'button.select_all_attributes',
              function() {
                var e = m(this)
                  .parent()
                  .data('index_value');
                return (
                  m('#attribute_values_' + e + ' > option').prop(
                    'selected',
                    'selected'
                  ),
                  m('#attribute_values_' + e).trigger('change'),
                  c(),
                  !1
                );
              }
            ),
            m('.product_attributes').on(
              'click',
              'button.select_no_attributes',
              function() {
                var e = m(this)
                    .parent()
                    .data('index_value'),
                  t = m(this)
                    .parent()
                    .data('taxonomy');
                return (
                  m('#attribute_values_' + e + ' > option').removeAttr(
                    'selected'
                  ),
                  m('#attribute_values_' + e).trigger('change'),
                  m('#attribute_variation_' + e).is(':checked') && l(t),
                  c(),
                  !1
                );
              }
            ),
            m('.product_attributes').on(
              'change',
              '.attribute_values',
              function() {
                var e = m(this)
                    .parent()
                    .data('index_value'),
                  e = m('#attribute_position_' + e).val(),
                  t = m(this)
                    .closest('.woocommerce_attribute')
                    .data('label');
                c(), r(m(this), e, t);
              }
            ),
            m('.product_attributes').on(
              'change',
              '.wcv_variation_checkbox',
              function() {
                var e = m(this)
                    .closest('.woocommerce_attribute')
                    .data('index_value'),
                  t = m(this)
                    .closest('.woocommerce_attribute')
                    .data('taxonomy'),
                  a = m(this)
                    .closest('.woocommerce_attribute')
                    .data('label'),
                  i = m('#attribute_position_' + e).val(),
                  e = m('#attribute_values_' + e);
                m(this).is(':checked')
                  ? (r(e, i, a),
                    m(document.body).trigger('woocommerce_added_attribute'))
                  : (l(t),
                    m(document.body).trigger('woocommerce_removed_attribute'));
              }
            ),
            m('.product_attributes').on('click', '.remove_row', function() {
              var e;
              return (
                window.confirm(wcv_frontend_product.remove_attribute) &&
                  ((e = m(this).closest('.woocommerce_attribute')).is(
                    '.taxonomy'
                  )
                    ? (e.find('select, input[type=text]').val(''),
                      e.hide(),
                      m('.attribute_taxonomy')
                        .find('option[value="' + e.data('taxonomy') + '"]')
                        .removeAttr('disabled'))
                    : (e.find('select, input[type=text]').val(''),
                      e.hide(),
                      n()),
                  l(e.data('taxonomy')),
                  c(),
                  m(document.body).trigger('woocommerce_removed_attribute')),
                !1
              );
            }),
            m('.product_attributes').sortable({
              items: '.woocommerce_attribute',
              cursor: 'move',
              axis: 'y',
              handle: 'h5',
              scrollSensitivity: 40,
              forcePlaceholderSize: !0,
              helper: 'clone',
              opacity: 0.65,
              placeholder: 'wcv-metabox-sortable-placeholder',
              start: function(e, t) {
                t.item.css('background-color', '#f6f6f6');
              },
              stop: function(e, t) {
                t.item.data('index_value');
                t.item.removeAttr('style'), n();
              }
            }),
            n(),
            m('.attribute_values').each(function() {
              var e = m(this)
                  .parent()
                  .data('index_value'),
                e = m('#attribute_position_' + e).val(),
                t = m(this)
                  .closest('.woocommerce_attribute')
                  .data('label');
              r(m(this), e, t);
            });
        }),
        m('.product_attributes').on(
          'click',
          'button.add_new_attribute',
          function() {
            m('.product_attributes').block({
              message: null,
              overlayCSS: { background: '#fff', opacity: 0.6 }
            });
            var e = m(this)
                .parent()
                .data('index_value'),
              t = m('#attribute_values_' + e),
              e = m(this)
                .parent()
                .data('taxonomy'),
              a = window.prompt(wcv_frontend_product.new_attribute_prompt);
            return (
              a
                ? ((e = {
                    action: 'wcv_json_add_new_attribute',
                    taxonomy: e,
                    term: a,
                    security: wcv_frontend_product.wcv_add_attribute_nonce
                  }),
                  m.post(wcv_frontend_product.ajax_url, e, function(e) {
                    e.error
                      ? window.alert(e.error)
                      : e.slug &&
                        (t.append(
                          m('<option />')
                            .attr('value', e.slug)
                            .prop('selected', 'selected')
                            .text(e.name)
                        ),
                        t.trigger('change'),
                        m(t)
                          .select2('destroy')
                          .select2()),
                      m('.product_attributes').unblock();
                  }))
                : m('.product_attributes').unblock(),
              !1
            );
          }
        ),
        window.Parsley.on('form:submit', function() {
          return c();
        }),
        m('#wcv-product-edit').on('submit', function(e) {
          if (
            (1 == wcv_frontend_product.require_featured_image &&
              '' === m('#_featured_image_id').val() &&
              (m('.wcv_featured_image_msg').html(
                wcv_frontend_product.require_featured_image_msg
              ),
              e.preventDefault()),
            1 == wcv_frontend_product.require_gallery_image &&
              '' === m('#product_image_gallery').val() &&
              (m('.wcv_gallery_msg').html(
                wcv_frontend_product.require_gallery_image_msg
              ),
              e.preventDefault()),
            1 == wcv_frontend_product.require_download_file)
          ) {
            var t = m('.download_file_table'),
              a = t.length,
              i = !0;
            if (!m('#_downloadable').is(':checked')) return;
            m('.downloadable_files').length &&
              (0 == t.find('.download_file').length && (i = !1),
              0 < a
                ? m('.download_file').each(function() {
                    ('' !==
                      m(this)
                        .find('td.file_name')
                        .find('input')
                        .val() &&
                      '' !==
                        m(this)
                          .find('td.file_url')
                          .find('input')
                          .val()) ||
                      (i = !1);
                  })
                : (i = !1),
              i ||
                (m('.downloadable_files').append(
                  '<span class="wcv_required_form_msg">' +
                    wcv_frontend_product.require_download_file_msg +
                    '</span>'
                ),
                m('.download_file_table').css({
                  color: '#b94a48',
                  'background-color': '#f2dede',
                  border: '1px solid #cc0000'
                }),
                e.preventDefault()));
          }
          c();
          t = m('#product_save_button');
          void 0 !== t && t.attr('disabled', 'disabled');
        }),
        function() {
          var e = !0;
          return (
            m('li a.attributes').length &&
              1 == wcv_frontend_product.require_attributes &&
              (0 < m('.woocommerce_attribute ').length
                ? m('.wcv_attribute_data').each(function() {
                    m(this)
                      .find('.attribute_values')
                      .val()
                      ? (m('.attributes-validation-error').html(''),
                        m('a.tabs-tab.attributes').css('background-color', ''),
                        m('a.tabs-tab.attributes').css('color', ''))
                      : (m('.attributes-validation-error').html(
                          '<span class="wcv_required_form_msg">' +
                            wcv_frontend_product.require_attributes_msg +
                            '</span>'
                        ),
                        m('a.tabs-tab.attributes').css(
                          'background-color',
                          'rgba(150,8,12,.55)'
                        ),
                        m('a.tabs-tab.attributes').css(
                          'color',
                          'rgba(255,255,255,.55)'
                        ),
                        (e = !1));
                  })
                : (m('.attributes-validation-error').html(
                    '<span class="wcv_required_form_msg">' +
                      wcv_frontend_product.require_attributes_msg +
                      '</span><br />'
                  ),
                  m('a.tabs-tab.attributes').css(
                    'background-color',
                    'rgba(150,8,12,.55)'
                  ),
                  m('a.tabs-tab.attributes').css(
                    'color',
                    'rgba(255,255,255,.55)'
                  ),
                  (e = !1))),
            e
          );
        });
    wcv_frontend_product.shipping_system_enabled || m('#shipping').html(''),
      ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(e => {
        m('.wcv-upload-files-input').on(e, function(e) {
          e.preventDefault(), e.stopPropagation();
        });
      }),
      ['dragenter', 'dragover'].forEach(e => {
        m('.wcv-upload-files-input').on(e, function() {
          m(this).addClass('is-dragover');
        });
      }),
      ['dragleave', 'drop'].forEach(e => {
        m('.wcv-upload-files-input').on(e, function() {
          m(this).removeClass('is-dragover');
        });
      });
    function u(e) {
      var t = new FormData();
      t.append('action', 'upload-attachment'),
        t.append('async-upload', e),
        t.append(
          '_wpnonce',
          _wpPluploadSettings.defaults.multipart_params._wpnonce
        );
      let a = 0;
      return (
        m.ajax({
          url: wcv_frontend_product.ajax_url,
          type: 'POST',
          data: t,
          processData: !1,
          contentType: !1,
          dataType: 'json',
          async: !1,
          success: function(e) {
            if (!e.success) throw new Error(e.data.message || 'Unknown error');
            a = e.data.id;
          },
          error: function(e) {
            alert('Error uploading file');
          }
        }),
        a
      );
    }
    m('.product-feat-image-upload .wcv-upload-files-input').on('drop', function(
      e
    ) {
      m(this).addClass('is-uploading');
      e = Array.from(e.originalEvent.dataTransfer.files);
      let t = [];
      e.forEach(e => {
        t.push(u(e));
      }),
        Promise.all(t).then(e => {
          a(), m(this).removeClass('is-uploading');
        }),
        m(this).removeClass('is-uploading');
    }),
      m('.product-feat-image-upload .wcv-browser-file').on('click', function(
        e
      ) {
        return e.preventDefault(), a(), !1;
      }),
      m('.product-imgs-gallery-upload .wcv-upload-files-input').on(
        'drop',
        function(e) {
          m(this).addClass('is-uploading');
          e = Array.from(e.originalEvent.dataTransfer.files);
          let t = [];
          e.forEach(e => {
            t.push(u(e));
          }),
            Promise.all(t).then(e => {
              i(), m(this).removeClass('is-uploading');
            }),
            m(this).removeClass('is-uploading');
        }
      );
    var _,
      d = document.getElementById('product-meta-accordion') || null,
      p = new MutationObserver(function(e, t) {
        for (var a of e) {
          var i;
          if ('attributes' === a.type && 'data-type' === a.attributeName)
            for (i of a.target.querySelectorAll('.wcv-accordion-title'))
              if (0 < i.getBoundingClientRect().width) {
                i.classList.contains('active') || i.click();
                break;
              }
        }
      });
    if (d) {
      p.observe(d, { attributes: !0, childList: !1, subtree: !1 });
      for (_ of d.querySelectorAll('.wcv-accordion-title'))
        if ('none' !== _.style.display) {
          _.click();
          break;
        }
    }
    m('.wcv-exporter-wrapper .select2').select2();
  });
}),
  document.addEventListener('DOMContentLoaded', function() {
    let t = () => {
        var e = document.querySelectorAll('.wcv_variation_checkbox');
        let t = 0,
          a = !1;
        e.forEach(e => {
          e.checked && t++;
        });
        var i = document.querySelectorAll('.attribute_values');
        for (let e = 0; e < i.length; e++)
          if (i[e].value) {
            a = !0;
            break;
          }
        0 < t && a
          ? (document
              .getElementById('wcv-attr-message')
              .classList.add('hide-all'),
            document.querySelectorAll('.variations-toolbar').forEach(e => {
              e.classList.remove('hide-all');
            }))
          : (document
              .getElementById('wcv-attr-message')
              .classList.remove('hide-all'),
            document.querySelectorAll('.variations-toolbar').forEach(e => {
              e.classList.add('hide-all');
            }));
      },
      a = () => {
        document.querySelectorAll('.wcv_variation_checkbox').forEach(e => {
          e.removeEventListener('change', t), e.addEventListener('change', t);
        });
      };
    var e = document.getElementById('attributes');
    e &&
      (t(),
      a(),
      new MutationObserver(e => {
        e.forEach(e => {
          'childList' === e.type && (a(), t());
        });
      }).observe(e, { childList: !0, subtree: !0 }));
    let i = e => {
      var t,
        a,
        i = document.getElementById('product-imgs-gallery-upload');
      i &&
        ((t = getComputedStyle(i).paddingLeft),
        (e = document.getElementById(e)),
        (e = getComputedStyle(e)),
        (t = Math.round(i.clientWidth) - parseFloat(t)),
        (a =
          (a = parseFloat(e.gridTemplateColumns.split(' ')[0])) *
            (t = Math.floor(t / a)) +
          (parseFloat(e.columnGap) || 0) * (t - 1)),
        (document.getElementById('product-imgs-gallery-parent').style.width =
          a + 'px'),
        window.innerWidth < 768) &&
        (i.classList.remove('wcv-flex-end'),
        i.classList.add('wcv-flex-center'));
    };
    i('product_images'),
      window.addEventListener('resize', function() {
        i('product_images');
      });
  });
