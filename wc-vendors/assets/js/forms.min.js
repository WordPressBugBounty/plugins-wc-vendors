!(function(s, o) {
  function a(n, r, s) {
    var o;
    return function() {
      var e = this,
        a = arguments,
        t = s && !o;
      clearTimeout(o),
        (o = setTimeout(function() {
          (o = null), s || n.apply(e, a);
        }, r)),
        t && n.apply(e, a);
    };
  }
  s(window).on('load', function() {
    var e, r;
    window.Parsley.on(
      'form:error',
      a(function() {
        s('html, body').animate(
          { scrollTop: s('.parsley-error:first').offset().top - 200 },
          'slow'
        ),
          s('.parsley-error:first').focus();
      }, 100)
    ),
      s('.wcv-form').length &&
        void 0 !== (e = o.Common_1.getInstance('.wcv-form')[0]) &&
        ((r = e._options.onError),
        (e._options.onError = function(e) {
          var a, t, n;
          e.length < 1 ||
            ((t = (a = s(e[0].getElement())).closest('.tabs-content')) &&
              !t.hasClass('active') &&
              void 0 !== (n = o.Common_1.getInstance('.wcv-tabs')[0]) &&
              n.changeTab('#' + t.attr('id')),
            (n = a.closest('.control-group')),
            s('html, body').animate(
              { scrollTop: n.offset().top },
              { duration: 500 }
            ),
            void 0 !== r && r(e));
        })),
      t(),
      s('#_wcv_vendor_enable_store_notice').is(':checked')
        ? s('#wp-_wcv_vendor_store_notice-wrap').slideDown()
        : s('#wp-_wcv_vendor_store_notice-wrap').slideUp(),
      s('#_wcv_vendor_enable_store_notice').click(function() {
        s('#wp-_wcv_vendor_store_notice-wrap').slideToggle();
      }),
      s('#_wcv_shipping_type').on('change', function() {
        var e = s(this).val();
        'flat' == e
          ? (s('#shipping-flat-rates').removeClass('hidden'),
            s('#shipping-country-rates').addClass('hidden'))
          : 'country' == e
          ? (s('#shipping-flat-rates').addClass('hidden'),
            s('#shipping-country-rates').removeClass('hidden'))
          : (s('#shipping-flat-rates').addClass('hidden'),
            s('#shipping-country-rates').addClass('hidden'));
      });
  }),
    s(window).on(
      'load',
      a(function() {
        var e = wcv_frontend_forms.vendor_select
          ? s('#_wcv_shipping_type').val()
          : wcv_frontend_forms.shipping_type;
        'flat' === e
          ? (s('#shipping-flat-rates').removeClass('hidden'),
            s('#shipping-country-rates').addClass('hidden'))
          : 'country' === e || 'country' === wcv_frontend_forms.shipping_type
          ? (s('#shipping-flat-rates').addClass('hidden'),
            s('#shipping-country-rates').removeClass('hidden'))
          : 'flat' === wcv_frontend_forms.shipping_type &&
            (s('#shipping-flat-rates').removeClass('hidden'),
            s('#shipping-country-rates').addClass('hidden'));
      }, 100)
    ),
    s('form').on('submit', function(e) {
      var t = !1,
        n = window.wcv_frontend_general.required_file_msg;
      s('.wcv-file-uploader').each(function() {
        var e = !1,
          a =
            (void 0 !== s(this).attr('required') &&
              ((a = s(this).attr('id')), (e = r(a, n))),
            s(this)
              .closest('.tabs-content')
              .first()
              .attr('id'));
        e
          ? (s('a.' + a).addClass('parsley-error'), (t = !0))
          : s('a.' + a).removeClass('parsley-error');
      }),
        t && e.preventDefault();
    }),
    s(document).on('input change', '.wcv-file-uploader', function() {
      var e, a, t;
      void 0 !== s(this).attr('required') &&
        ((e = s(this).attr('id')),
        (a = s('#' + e).data('msg-id')),
        (t = s(this)
          .closest('.tabs-content')
          .first()
          .attr('id')),
        0 != s('#' + e).val()) &&
        '' != s('#' + e).val() &&
        (s('#' + a)
          .html('')
          .removeClass('parsley-error'),
        s('.' + t).removeClass('parsley-error'));
    });
  var r = function(e, a) {
    var t = !1,
      n = s('#' + e).data('msg-id');
    return (
      0 == s('#' + e).val() || '' == s('#' + e).val()
        ? (s('#' + n)
            .html(a)
            .addClass('parsley-error'),
          (t = !0))
        : s('#' + n)
            .html('')
            .removeClass('parsley-error'),
      t
    );
  };
  let t = () => {
      var e = s('#wcv_commission_payout_method').val(),
        a = s('#wcv-paypal-payout-fields'),
        t = s('#wcv-bank-payout-fields'),
        n = s('#stripe-connect-vendor');
      switch (e) {
        case 'paypal':
          i(a);
          break;
        case 'bank':
          i(t);
          break;
        case 'stripe-connect':
          i(n);
          break;
        default:
          d();
      }
    },
    e =
      (s('#wcv_commission_payout_method').on('change', t),
      s('#wcv_paypal_masspay_wallet').on('change', function() {
        e();
      }),
      function() {
        var e = s('#wcv_paypal_masspay_venmo_id_wrapper'),
          a = s('#wcv_paypal_masspay_email_address_wrapper');
        switch (s('#wcv_paypal_masspay_wallet').val()) {
          case 'paypal':
            s(e).hide(), s(a).show();
            break;
          case 'venmo':
            s(e).show(), s(a).hide();
            break;
          default:
            s(e).hide(), s(a).hide();
        }
      }),
    i = function(e) {
      d(), e.show();
    },
    d = function() {
      s('.wcv-payout-method').hide(), s('.wcv_stripe_connect_container').hide();
    };
})(jQuery, Ink.UI);
